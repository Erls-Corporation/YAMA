<!--ToolbarButton.xaml
	
	A button in the toolbar.
	The toolbar can have a menu associated with it. This menu will
	be toggled when the button is clicked. The arrow can either be
	inline with the content (default) or seperated into its own
	button with a separated click event.
	
	= = = = = = = = = =
	
	Copyright 2012 Simplare
	
	This code is part of the Stoffi Music Player Project.
	Visit our website at: stoffiplayer.com
	
	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version
	3 of the License, or (at your option) any later version.
	
	See stoffiplayer.com/license for more information.
	-->
<Button x:Class="Stoffi.Platform.Windows7.GUI.Controls.ToolbarButton"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:Stoffi.Platform.Windows7.GUI.Controls"
		mc:Ignorable="d"
		Padding="13,2,14,3">
	<Button.Resources>
		<Style TargetType="Button" x:Key="AeroStyle">
			<Setter Property="Foreground" Value="#1e395b"/>
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate/>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type local:ToolbarButton}">
						<StackPanel Orientation="Horizontal" x:Name="ButtonPanel">
							<Border SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" x:Name="OuterBorder" BorderBrush="Transparent">
								<Border SnapsToDevicePixels="True" CornerRadius="1" Padding="{TemplateBinding Padding}" BorderThickness="1" x:Name="InnerBorder" BorderBrush="Transparent">
									<StackPanel Orientation="Horizontal" Name="ButtonInnerPanel">
										<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="True"/>
										<Polygon Visibility="Collapsed" x:Name="InlineArrow" Margin="5,1,0,0"
												 HorizontalAlignment="Center" VerticalAlignment="Center"
												 Points="0,0 4,4 8,0" Fill="#1e395b"/>
									</StackPanel>
								</Border>
							</Border>
							<Border SnapsToDevicePixels="True" CornerRadius="0,2,2,0" BorderThickness="0,1,1,1" x:Name="OuterArrowBorder" BorderBrush="Transparent" Visibility="Collapsed">
								<Border SnapsToDevicePixels="True" CornerRadius="0,1,1,0" Padding="1,0,1,0" BorderThickness="1"
										x:Name="InnerArrowBorder" BorderBrush="Transparent" Background="Transparent" MouseLeftButtonDown="Arrow_Click">
									<StackPanel Orientation="Horizontal" Name="ArrowPanel">
										<Polygon x:Name="SeperatedArrow" Margin="2,1,3,0" HorizontalAlignment="Center" VerticalAlignment="Center" Points="0,0 4,4 8,0" Fill="#1e395b"/>
									</StackPanel>
								</Border>
							</Border>
						</StackPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter TargetName="ButtonPanel" Property="Background" Value="Transparent"/>
								<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
								<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
								<Setter TargetName="InnerArrowBorder" Property="BorderBrush" Value="#f3f6fb"/>
								<Setter TargetName="OuterArrowBorder" Property="BorderBrush" Value="#BBaabcd3"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="ButtonPanel" Property="Background">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientStop Color="#f8fbfe" Offset="0.0"/>
											<GradientStop Color="#edf2fa" Offset="0.5"/>
											<GradientStop Color="#d7e4f4" Offset="0.5"/>
											<GradientStop Color="#c1d2e8" Offset="1.0"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
								<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
								<Setter TargetName="InnerArrowBorder" Property="BorderBrush" Value="#f3f6fb"/>
								<Setter TargetName="OuterArrowBorder" Property="BorderBrush" Value="#BBaabcd3"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="ButtonPanel" Property="Background">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientStop Color="#c9d4e4" Offset="0.0"/>
											<GradientStop Color="#e1ebf5" Offset="0.2"/>
											<GradientStop Color="#d8e4f1" Offset="0.5"/>
											<GradientStop Color="#cfdbec" Offset="0.5"/>
											<GradientStop Color="#cfdced" Offset="1.0"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent"/>
								<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#bbaabcd5"/>
								<Setter TargetName="InnerArrowBorder" Property="BorderBrush" Value="Transparent"/>
								<Setter TargetName="OuterArrowBorder" Property="BorderBrush" Value="#bbaabcd5"/>
								<Setter TargetName="ButtonInnerPanel" Property="Margin" Value="1,1,-1,-1"/>
								<Setter TargetName="ArrowPanel" Property="Margin" Value="1,1,-1,-1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="ShowArrow" Value="True"/>
									<Condition Property="DisableArrow" Value="False"/>
									<Condition Property="SplitArrow" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="OuterBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="InnerBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="OuterArrowBorder" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="InlineArrow" Property="Visibility" Value="Visible"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="ShowArrow" Value="True"/>
									<Condition Property="DisableArrow" Value="False"/>
									<Condition Property="SplitArrow" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="OuterBorder" Property="CornerRadius" Value="2,0,0,2"/>
								<Setter TargetName="InnerBorder" Property="CornerRadius" Value="1,0,0,1"/>
								<Setter TargetName="OuterArrowBorder" Property="Visibility" Value="Visible"/>
								<Setter TargetName="InlineArrow" Property="Visibility" Value="Collapsed"/>
							</MultiTrigger>
							<Trigger Property="ShowArrow" Value="False">
								<Setter TargetName="OuterBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="InnerBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="OuterArrowBorder" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="InlineArrow" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="DisableArrow" Value="True">
								<Setter TargetName="OuterBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="InnerBorder" Property="CornerRadius" Value="2"/>
								<Setter TargetName="OuterArrowBorder" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="InlineArrow" Property="Visibility" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="ClassicStyle">
			<Setter Property="Padding" Value="13,0,13,0"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="False">
					<Setter Property="BorderBrush" Value="{x:Null}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Button.Resources>
</Button>
